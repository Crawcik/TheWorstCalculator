<#@ template hostspecific="true" language="C#" #>
<#@ output extension=".go" #>
<#@ import namespace="System.Linq" #>
<#@ parameter type="System.Int32" name="MaxNumber" #>
<#@ parameter type="System.String" name="Operators" #>
<#
	string GetList() => string.Join(',', Operators.ToCharArray().Select(x=> $" {x} - {GetName(x)}"));

	string GetName(char type) => type switch
	{
		'a' => "Add",
		's' => "Subtract",
		'm' => "Multiple",
		'd' => "Divide",
		_ => throw new ArgumentException("Wrong argument has been given")
	};
	
	int GetNumber(char type, int a, int b) => type switch
	{
		'a' => a + b,
		's' => a - b,
		'm' => a * b,
		'd' => b == 0 ? 0 : a / b,
		_ => throw new ArgumentException("Wrong argument has been given")
	};
#>
package main
import "fmt"

func main() {
    var a, b int
    var method string
    fmt.Println("Max number: <#= MaxNumber #>")
    fmt.Print("First number: ")
    fmt.Scanln(&a)
    fmt.Print("Second number: ")
    fmt.Scanln(&b)
    fmt.Println("Do u wanna:<#= GetList() #>")
    fmt.Scanf("%s", &method)
    fmt.Print("Result: ")
<#
	char[] keys = Operators.ToCharArray();
	bool first = true;
	foreach (char key in keys)
	{
		if(first)
			this.WriteLine($"\tif method == \"{key}\" " + "{");
		else
			this.WriteLine("\t}" + $" else if method == \"{key}\" " + "{");
		first = false;
#>
		<#= GetName(key).ToLower() #>(a, b)
<#
	}
#>
    } else {
        fmt.Println("Bad method selected!")
    }
}
<#
	foreach(char key in keys)
	{
#>

func <#= GetName(key).ToLower() #>(a, b int) {
<#
		for(int a = 0; a <= MaxNumber; a++)
		{
			for(int b = 0; b <= MaxNumber; b++)
			{
				if(a == 0 && b == 0)
					this.WriteLine($"\tif a == {a} && b == {b} " + "{");
				else
					this.WriteLine("\t}" + $" else if a == {a} && b == {b} " + "{");
#>
		fmt.Println(<#= GetNumber(key, a, b) #>)
<#
			}
		}
#>
	} else {
		fmt.Println("Unsupported number given!")
	}
}
<#
	}
#>